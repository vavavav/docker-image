# Base Image
FROM ubuntu:18.04

# Install build dependencies of llvm.
RUN apt update && apt install -y git build-essential make wget python3

# g++-9
RUN apt install -y software-properties-common
RUN add-apt-repository ppa:ubuntu-toolchain-r/test
RUN apt update
RUN apt install -y g++-9
RUN apt install -y git

# Use newer CMake for LLVM
RUN cd tmp && wget -q https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-linux-x86_64.tar.gz && tar -xf cmake-3.24.0-linux-x86_64.tar.gz

# Copy necessary files from the host.  A tarball is automatically expanded.

RUN git clone https://github.com/llvm/llvm-project.git /tmp/llvm-project
RUN cd /tmp/llvm-project && git checkout c5dede880d175f7229c9b2923f4753e12702305d

# Compile LLVM
ARG cmake_configs
ARG install_dir_name
RUN mkdir /tmp/llvm-project/build && cd /tmp/llvm-project/build && /tmp/cmake-3.24.0-linux-x86_64/bin/cmake /tmp/llvm-project/llvm -DLLVM_ENABLE_PROJECTS=mlir    -DLLVM_BUILD_EXAMPLES=ON    -DLLVM_TARGETS_TO_BUILD="X86;NVPTX;RISCV;AMDGPU"    -DMLIR_ENABLE_CUDA_RUNNER=ON    -DCMAKE_BUILD_TYPE=Release    -DLLVM_ENABLE_ASSERTIONS=ON    -DCMAKE_C_COMPILER=gcc-9    -DCMAKE_CXX_COMPILER=g++-9    -DLLVM_ENABLE_RTTI=ON    -DLLVM_INSTALL_UTILS=ON    -DMLIR_INCLUDE_INTEGRATION_TESTS=ON"
RUN cd /tmp/llvm-project/build && make -j$ 8 install

# Create a tarball
# RUN cd /tmp && tar -cJf "${install_dir_name}.tar.xz" "${install_dir_name}"
